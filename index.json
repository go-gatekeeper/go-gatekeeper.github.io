[
{
	"uri": "https://go-gatekeeper.github.io/configuration/",
	"title": "Configuration Options",
	"tags": [],
	"description": "",
	"content": "listen  Environment Variable: LISTEN Example: :80 Required: Yes Default: None Related: listen-http   listen configures the main listening interface (compare with listen-http). Examples for\n regular http(s):  use :80 or :443 to listen on all interfaces 127.0.0.1:443 to only listen on a certain interface   unix socket: unix:///tmp/echo.sock (add the prefix unix://)  This config is passed to golang\u0026rsquo;s net.Listen(), so use strings acceptable by address.\n  listen-http  Environment Variable: LISTEN_HTTP Example: :80 Required: Yes Default: None Related: listen   listen-http configures the secondary listening interface. This listener has no TLS support, and uses the same configuration syntax as listen.\nUsually, we only use listen and not set listen-http.\n  discovery-url  Environment Variable: DISCOVERY_URL Example: https://keycloak.localhost/auth/realms/applications (refer to demo) Required: Yes, unless skip-token-verification is set, and louketo is in reverse proxy mode Default: None Related: skip-openid-provider-tls-verify, openid-provider-proxy, openid-provider-timeout   louketo will get information about the authorization server through the authorization server\u0026rsquo;s openid-configuration well-known URI, according to RFC8414.\nlouketo will grab this metadata from discovery-url + /.well-known/openid-configuration as is registered with IANA\nSpecify discovery-url without /.well-known/openid-configuration.\nHere are links to information about discovery-urls for some other OAuth providers\n Google Identity Platform Auth0 IdentityServer4 PingFederate   client-id  Environment Variable: CLIENT_ID Example: whoami (refer to demo) Required: Yes, unless skip-token-verification is set, and louketo is in reverse proxy mode Default: None Related: client-secret   client-id is the Client ID for an OAuth2 client (your app is the OAuth2 client, in this case).\nIn reverse proxy mode As part of the OAuth2 authorization code flow, louketo will use client-id and client-secret to authenticate with the server when it needs to\n exchange the authorization code for tokens refresh the access token  The client ID and secret are also used to invoke the revocation URL at the authorization server.\nIf the login handler is enabled (enable-login-handler), the credentials are also used to login at the authorization provider using the OAuth2 Resource Owner Password Credentials flow.\nclient-id is also used to check access tokens to ensure that client-id is among the audiences in the aud field of the token.\nIn forward-signing proxy mode louketo will use louketo client-id and client-secret to authenticate with the server to get tokens for outbound requests.\n client-secret  Environment Variable: CLIENT_SECRET Example: 932475b6-9748-41b8-8fd7-c6ce2d845ece (refer to demo) Required: Yes, unless skip-token-verification is set, and louketo is in reverse proxy mode Default: None Related: client-id   client-secret is the client secret for an OAuth2 client (your app is the OAuth2 client, in this case). This is used with client-id as a pair of credentials. See client-id for how this is used.\n redirection-url  Environment Variable: REDIRECTION_URL Example: 932475b6-9748-41b8-8fd7-c6ce2d845ece (refer to demo) Required: Yes, unless skip-token-verification is set, and louketo is in reverse proxy mode Default: None Related: client-id   client-secret is the client secret for an OAuth2 client (your app is the OAuth2 client, in this case). This is used with client-id as a pair of credentials. See client-id for how this is used.\n revocation-url  Environment Variable: REVOCATION_URL Example: https://keycloak.localhost/auth/realms/applications/protocol/openid-connect/logout Required: No. Will attempt to discover this url from OpenID discovery-url response Default: None Related: discovery-url   If revocation-url is not specified, the end_session_endpoint of the OpenID discovery-url response will be used as the revocation-url. If neither is available, no logout at the authorization provider will be done.\nrevocation-url is used during the logout process. When the /oauth/logout endpoint on louketo is called, louketo will request revocation of this session\u0026rsquo;s refresh token by doing an authenticated POST to this revocation-url with the refresh token.\n "
},
{
	"uri": "https://go-gatekeeper.github.io/",
	"title": "",
	"tags": [],
	"description": "",
	"content": "gatekeeper gatekeeper is the simple authentication and authorization proxy that gets your app off the ground!\n gatekeeper was previously known as louketo and keycloak-gatekeeper.\n Goals  To have just enough auth features (both authentication and authorization) to get your app off the ground To be well documented and easy to get started with To remain true to the roots of this project  gatekeeper will be interoperable with keycloak out of the box, but not be limited to work only with keycloak    Announcements! gatekeeper is reborn with from the ashes of louketo under the new organization go-gatekeeper.\nIn the next few months, we will be working to\n Get basic CI set up Review/update/publish docs Update Keycloak documentation with new links  Watch this space!\n"
},
{
	"uri": "https://go-gatekeeper.github.io/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "https://go-gatekeeper.github.io/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]